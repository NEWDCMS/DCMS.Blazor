@inject Microsoft.Extensions.Localization.IStringLocalizer<NavMenu> _localizer
@using System.Security.Claims

<MudNavMenu Color="Color.Primary"
			Rounded="true"
			Dense="true"
			Margin="Margin.Dense"
			Class="pa-2 overflow-auto mb-3">

	<MudNavLink Href="/"
				Match="NavLinkMatch.All"
				Icon="@Icons.Filled.SpaceDashboard"
				IconColor="Color.White">首页</MudNavLink>

@*	<MudDivider />*@

	@*销售*@
	<MudNavGroup Title="销售"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				 Icon="@Icons.Filled.PointOfSale"
				 IconColor="Color.White">
		@foreach (var item in MenuService.Sales)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"sales/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"sales/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>


	@*采购*@
	<MudNavGroup Title="采购"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				 Icon="@Icons.Filled.ShoppingCart"
				 IconColor="Color.White">
		@foreach (var item in MenuService.Purchases)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"purchases/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"purchases/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>


	@*仓库*@
	<MudNavGroup Title="仓库"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				  Icon="@Icons.Filled.Warehouse"
				 IconColor="Color.White">
		@foreach (var item in MenuService.WareHouses)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"warehouses/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"warehouses/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>


	@*财务*@
	<MudNavGroup Title="财务"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				  Icon="@Icons.Filled.CurrencyYen"
				 IconColor="Color.White">
		@foreach (var item in MenuService.Finances)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"finances/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"finances/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>


	@*档案*@
	<MudNavGroup Title="档案"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				  Icon="@Icons.Filled.SupervisedUserCircle"
				 IconColor="Color.White">
		@foreach (var item in MenuService.Archives)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"archives/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"archives/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>


	@*报表*@
	<MudNavGroup Title="报表"
				 Expanded="true"
				 ExpandIcon="@Icons.Material.Filled.ExpandMore"
				 Icon="@Icons.Filled.InsertChart"
				 IconColor="Color.White">
		@foreach (var item in MenuService.Reports)
		{
			if (item.IsNavGroup)
			{
				<MudNavGroup Title="@item.Title"
					 Expanded="@(IsSubGroupExpanded(item))"
					 ExpandIcon="@Icons.Material.Filled.ExpandMore"
					 Icon="@Icons.Filled.List"
					 IconColor="Color.White">
					@foreach (var subItem in item.GroupMenus)
					{
						string href = $"reports/{subItem.Link}";
						<MudNavLink Href="@href">@subItem.Title</MudNavLink>
					}
				</MudNavGroup>
			}
			else
			{
				string href = $"reports/{item.Link}";
				<MudNavLink Href="@href">@item.Title</MudNavLink>
			}
		}
	</MudNavGroup>

</MudNavMenu>

@*
	<MudNavMenu>
	<MudNavLink Href="/" Match="NavLinkMatch.All" Icon="@Icons.Material.Outlined.Home" IconColor="Color.Primary">首页</MudNavLink>



	@if (_canViewHangfire)
	{
	<MudNavLink Href="/jobs" Target="_blank" Icon="@Icons.Material.Outlined.Work" IconColor="Color.Error">
	@_localizer["Hangfire"]
	</MudNavLink>
	}
	<MudNavLink Href="/swagger/index.html" Target="_blank" Icon="@Icons.Material.Outlined.LiveHelp" IconColor="Color.Tertiary">
	API接口
	</MudNavLink>

	<MudListSubheader Class="mt-2 mb-n2">@_localizer["Templates"]</MudListSubheader>
	<MudNavLink Href="/pages" Icon="@Icons.Material.Outlined.CardGiftcard" IconColor="Color.Error">
	页面
	</MudNavLink>
	<MudNavLink Href="/settings" Icon="@Icons.Material.Outlined.SettingsApplications" IconColor="Color.Default">
	配置
	</MudNavLink>

	<MudListSubheader Class="mt-2 mb-n2">@_localizer["Personal"]</MudListSubheader>
	@if (_canViewDashboards)
	{
	<MudNavLink Href="/dashboard" Icon="@Icons.Material.Outlined.Dashboard" IconColor="Color.Default">
	控制面板
	</MudNavLink>
	}
	<MudNavLink Href="/account" Icon="@Icons.Material.Outlined.SupervisorAccount" IconColor="Color.Warning">
	账户
	</MudNavLink>
	@if (_canViewAuditTrails)
	{
	<MudNavLink Href="/audit-trails" Icon="@Icons.Material.Outlined.Security" IconColor="Color.Error">
	审计日志
	</MudNavLink>
	}


	@if (_canViewUsers || _canViewRoles)
	{
	<MudListSubheader Class="mt-2 mb-n2">@_localizer["Administrator"]</MudListSubheader>
	@if (_canViewUsers)
	{
	<MudNavLink Href="/identity/users" Icon="@Icons.Material.Outlined.Person" IconColor="Color.Success">
	用户管理
	</MudNavLink>
	}
	@if (_canViewRoles)
	{
	<MudNavLink Href="/identity/roles" Icon="@Icons.Material.Outlined.SupervisedUserCircle" IconColor="Color.Default">
	角色管理
	</MudNavLink>
	}
	}
	@if (_canViewChat)
	{
	<MudListSubheader Class="mt-2 mb-n2">@_localizer["Communication"]</MudListSubheader>
	<MudNavLink Href="/chat" Icon="@Icons.Material.Outlined.MarkChatUnread" IconColor="Color.Primary">
	聊天
	</MudNavLink>
	}
	@if (_canViewProducts || _canViewBrands)
	{
	<MudListSubheader Class="mt-2 mb-n2">@_localizer["Catalog Management"]</MudListSubheader>
	@if (_canViewProducts)
	{
	<MudNavLink Href="/catalog/products" Icon="@Icons.Material.Outlined.CallToAction" IconColor="Color.Warning">
	商品管理
	</MudNavLink>
	}
	@if (_canViewBrands)
	{
	<MudNavLink Href="/catalog/brands" Icon="@Icons.Material.Outlined.CallToAction" IconColor="Color.Default">
	品牌管理
	</MudNavLink>
	}
	}

	<MudDivider Class="mt-3 mb-6 mx-3"></MudDivider>


	</MudNavMenu>*@

@code {
	private ClaimsPrincipal _authenticationStateProviderUser;

	private bool _canViewHangfire;
	private bool _canViewDashboards;
	private bool _canViewDocuments;
	private bool _canViewDocumentTypes;
	private bool _canViewAuditTrails;
	private bool _canViewRoles;
	private bool _canViewUsers;
	private bool _canViewChat;
	private bool _canViewProducts;
	private bool _canViewBrands;

	protected override async Task OnParametersSetAsync()
	{
		_authenticationStateProviderUser = await _stateProvider.GetAuthenticationStateProviderUserAsync();
		_canViewHangfire = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Hangfire.View)).Succeeded;
		_canViewDashboards = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Dashboards.View)).Succeeded;
		_canViewDocuments = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Documents.View)).Succeeded;
		_canViewDocumentTypes = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.DocumentTypes.View)).Succeeded;
		_canViewAuditTrails = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.AuditTrails.View)).Succeeded;
		_canViewRoles = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Roles.View)).Succeeded;
		_canViewUsers = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Users.View)).Succeeded;
		_canViewChat = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Communication.Chat)).Succeeded;
		_canViewProducts = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Products.View)).Succeeded;
		_canViewBrands = (await _authorizationService.AuthorizeAsync(_authenticationStateProviderUser, Permissions.Brands.View)).Succeeded;
	}
}