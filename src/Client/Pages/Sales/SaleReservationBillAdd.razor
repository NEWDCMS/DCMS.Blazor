@page "/sales/salereservationbillAdd"

@using System.Net.Http.Json
@using DCMS.Application.Models.Sale;
@inject ISnackbar Snackbar

@inject HttpClient httpClient

<MudPaper Elevation="0" Class="py-2">
	<MudBreadcrumbs Class="py-1" Items="_breadcrumbs" Separator="/"> </MudBreadcrumbs>
</MudPaper>

@if (!_loaded)
{
	<Spinner />
}
else
{

	@*过滤器*@

	<MudPaper Elevation="0" Class="pa-4 my-4">
		<MudGrid>
			<MudItem xs="12" sm="6" md="2">
				<MudAutocomplete T="string"
							 Label="客户"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 AdornmentIcon="@Icons.Material.Filled.Search"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
			<MudItem xs="12" sm="6" md="2">
				<MudAutocomplete T="string"
							 Label="业务员"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
			<MudItem xs="12" sm="6" md="2">
				<MudAutocomplete T="string"
							 Label="仓库"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
			<MudItem xs="12" sm="6" md="2">
				<MudAutocomplete T="string"
							 Label="配送员"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
			<MudItem xs="12" sm="6" md="2">
				<MudTextField T="DateTime?" Format="yyyy-MM-dd" Label="交易时间" InputType="InputType.Date" Variant="Variant.Outlined" Margin="Margin.Dense" />
			</MudItem>
			<MudItem xs="12" sm="6" md="1">
				<MudAutocomplete T="string"
							 Label="最小单位"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
			<MudItem xs="12" sm="6" md="1">
				<MudAutocomplete T="string"
							 Label="价格体系"
							 @bind-Value="@element.Name"
							 Variant="Variant.Outlined"
							 Margin="Margin.Dense"
							 SearchFunc="@Search1"
							 ResetValueOnEmptyText="@resetValueOnEmptyText"
							 CoerceText="@coerceText"
							 CoerceValue="@coerceValue" />
			</MudItem>
		</MudGrid>
		<MudGrid>
			<MudItem xs="12" sm="6" md="4">
				<MudField  @bind-Value="@element.Name" Label="单号" Variant="Variant.Text" Margin="Margin.Dense" />
			</MudItem>
			<MudItem xs="12" sm="6" md="4">
				<MudField  @bind-Value="@element.Name" Label="制单" Variant="Variant.Text"  Margin="Margin.Dense"/>
			</MudItem>
			<MudItem xs="12" sm="6" md="4">
				<MudTextField @bind-Value="@element.Name" Label="备注" Variant="Variant.Outlined" Margin="Margin.Dense" />
			</MudItem>
		</MudGrid>
	</MudPaper>


	@*数据表格*@

	<MudTable 
	Elevation="0"
		  Striped="false"
		  Bordered="false"
		  Hover="true"  
		  @ref="_table"  
		  Items="@_items" 
		  Dense="true" 
		  ReadOnly="@ronly" 
		  CanCancelEdit="@canCancelEdit" 
		  Filter="new Func<SaleReservationItemModel,bool>(FilterFunc)"
          @bind-SelectedItem="selectedItem1" 
		  SortLabel="Sort By" 
		  CommitEditTooltip="Commit Edit"
          OnCommitEditClick="@(() => Snackbar.Add("已调用提交编辑处理程序"))"
		  RowEditPreview="BackupItem" 
		  RowEditCancel="ResetItemToOriginalValues"
          RowEditCommit="ItemHasBeenCommitted" 
		  IsEditRowSwitchingBlocked="@blockSwitch">

		@*<HeaderContent>
			<MudTh>商品名称</MudTh>
			<MudTh>条形码</MudTh>
			<MudTh>单位</MudTh>
			<MudTh>单位换算</MudTh>
			<MudTh Style="text-align: right">数量</MudTh>
			<MudTh Style="text-align: right">价格</MudTh>
			<MudTh Style="text-align: right">金额</MudTh>
			<MudTh>可用库存</MudTh>
			<MudTh>现货库存</MudTh>
			<MudTh>预占库存</MudTh>
			<MudTh>备注</MudTh>
			<MudTh>操作</MudTh>
		</HeaderContent>*@

		<ToolBarContent>
			<MudButton Variant="Variant.Text" @onclick="@(() => NewRow())">添加行</MudButton>
			<MudSpacer />
		</ToolBarContent>

    <ColGroup>
        <col style="width:50px;" />
        <col style="width:80px;" />
        <col style="width:50%;" />
        <col />
        <col />
        <col style="width:50px;" />
    </ColGroup>

    <HeaderContent>
        <MudTh><MudTableSortLabel SortBy="new Func<SaleReservationItemModel, object>(x=>x.Id)">编号</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SaleReservationItemModel, object>(x=>x.BillId)">单据</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<SaleReservationItemModel, object>(x=>x.ProductId)">商品</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SaleReservationItemModel, object>(x=>x.Quantity)">数量</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortBy="new Func<SaleReservationItemModel, object>(x=>x.Remark)">备注</MudTableSortLabel></MudTh>
    </HeaderContent>

    <RowTemplate>
		<MudTd DataLabel="编号">@context.Id</MudTd>
        <MudTd DataLabel="单据">@context.BillId</MudTd>
        <MudTd DataLabel="商品">@context.ProductId</MudTd>
        <MudTd DataLabel="数量">@context.Quantity</MudTd>
        <MudTd DataLabel="备注">@context.Remark</MudTd>
    </RowTemplate>

    <RowEditingTemplate>
        <MudTd DataLabel="编号">@context.Id</MudTd>
        <MudTd DataLabel="单据">
            <MudTextField @bind-Value="@context.BillId" Required />
        </MudTd>
        <MudTd DataLabel="商品">
            <MudTextField @bind-Value="@context.ProductId" Required />
        </MudTd>
        <MudTd DataLabel="数量">
            <MudNumericField @bind-Value="@context.Quantity" Required Min="1" />
        </MudTd>
        <MudTd DataLabel="备注">
            <MudTextField @bind-Value="@context.Remark" Required />
        </MudTd>
    </RowEditingTemplate>


		<FooterContent>
			<MudTd colspan="12">
				<MudGrid>
					<MudItem xs="12" sm="6" md="2">
						<MudTextField @bind-Value="@element.Name" Label="本次优惠金额" Variant="Variant.Text" Margin="Margin.Dense" />
					</MudItem>
					<MudItem xs="12" sm="6" md="2">
						<MudTextField @bind-Value="@element.Name" Label="优惠后金额" Variant="Variant.Text" Margin="Margin.Dense"/>
					</MudItem>
					<MudItem xs="12" sm="6" md="2">
						<MudTextField @bind-Value="@element.Name" Label="现金" Variant="Variant.Text" Margin="Margin.Dense" />
					</MudItem>
						<MudItem xs="12" sm="6" md="4">
						<MudTextField @bind-Value="@element.Name" Label="欠款金额" Variant="Variant.Text" Margin="Margin.Dense" />
					</MudItem>
					<MudItem xs="12" sm="6" md="2">
						<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.MoneyOffCsred" Color="Color.Info" FullWidth="true">更改预收款账户</MudButton>
					</MudItem>
				</MudGrid>
			</MudTd>
		</FooterContent>

</MudTable>



	<MudPaper Class="pa-4 mt-4" Elevation="0">

		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Save" Color="Color.Primary" Class="mr-2" Link="/">保存</MudButton>

		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.SaveAs" Color="Color.Info" Class="mr-2">保存并继续</MudButton>
				<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.CheckCircle" Color="Color.Warning" Class="mr-2">审核</MudButton>

						<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Redo" Color="Color.Error" Class="mr-2">红冲</MudButton>

		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Print" Color="Color.Secondary" Class="mr-2">打印</MudButton>

		<MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Refresh" Color="Color.Success" Class="mr-2" Link="/sales/salereservationbill">返回</MudButton>

		<MudSpacer />

	</MudPaper>



<MudSwitch @bind-Checked="@ronly" Color="Color.Tertiary">Read Only</MudSwitch>
<MudSwitch @bind-Checked="@canCancelEdit" Color="Color.Info">Can Cancel Edit</MudSwitch>
<MudSwitch @bind-Checked="@blockSwitch" Color="Color.Success">Block Edit Row Switching</MudSwitch>
<MudText Inline="true">Selected1: @selectedItem1?.Id</MudText>

<MudExpansionPanels Style="flex: 1;">
    <MudExpansionPanel Text="Show inline-edit event log">
        @foreach (var message in editEvents)
        {
<MudText>@message</MudText>}
        @if (editEvents.Count > 0)
        {
<div class="d-flex">
    <MudSpacer />
    <MudButton Class="mt-3" ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick="ClearEventLog">Clear event log</MudButton>
</div>}
    </MudExpansionPanel>
</MudExpansionPanels>


}


@code
{


	private string _searchString;
	private bool _readOnly;
	private bool _isCellEditMode;
	private List<string> _events = new();
	private bool _editTriggerRowClick;

	private bool _dense = false;
	private bool _striped = true;
	private bool _bordered = false;


	Atom element = new Atom { Name = "", Mass = 1.00794, Electrons = 1, Changed = DateTime.Today };
	public bool CheckBox1 { get; set; } = true;


	private HashSet<SaleReservationBillModel> selectedItems = new HashSet<SaleReservationBillModel>();

	private bool resetValueOnEmptyText;
	private bool coerceText;
	private bool coerceValue;
	private string value1, value2;
	private string[] states = {"Alabama", "Alaska", "American Samoa"};




	private async Task<IEnumerable<string>> Search1(string value)
	{
		await Task.Delay(5);
		if (string.IsNullOrEmpty(value))
			return states;
		return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}

	private async Task<IEnumerable<string>> Search2(string value)
	{
		await Task.Delay(5);

		if (string.IsNullOrEmpty(value))
			return new string[0];
		return states.Where(x => x.Contains(value, StringComparison.InvariantCultureIgnoreCase));
	}


	private List<BreadcrumbItem> _breadcrumbs = new List<BreadcrumbItem>
	{
		new BreadcrumbItem("首页", href: "/"),
		new BreadcrumbItem("销售", href: "/"),
		new BreadcrumbItem("销售订单", href: "/sales/salereservationbill"),
		new BreadcrumbItem("创建", href: "/sales/salereservationbilladd", disabled: true)
	};


	public class Atom
	{
		public string Name { get; set; }
		public double Mass { get; set; }
		public int Electrons { get; set; }
		public DateTime Changed { get; set; }
	}

	private void Reset()
	{
		element = new Atom { Name = "Hydrogen", Mass = 1.00794, Electrons = 1, Changed = DateTime.Today };
		StateHasChanged();
	}

	AggregateDefinition<SaleReservationBillModel> _sumAmountFormat = new AggregateDefinition<SaleReservationBillModel>
		{
			Type = AggregateType.Sum,
			DisplayFormat = "￥: {value}"
			//CustomAggregate = x =>
			// {
			//	 var sum = x.Sum(z => z.SumAmount);
			//	 return $"￥: {sum.ToString("C0")}";
			// }
		};


	// events
	void StartedEditingItem(SaleReservationBillModel item)
	{
		_events.Insert(0, $"Event = StartedEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
	}

	void CancelledEditingItem(SaleReservationBillModel item)
	{
		_events.Insert(0, $"Event = CancelledEditingItem, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
	}

	void CommittedItemChanges(SaleReservationBillModel item)
	{
		_events.Insert(0, $"Event = CommittedItemChanges, Data = {System.Text.Json.JsonSerializer.Serialize(item)}");
	}

	void RowClicked(DataGridRowClickEventArgs<SaleReservationBillModel> args)
	{
		_events.Insert(0, $"Event = RowClick, Index = {args.RowIndex}, Data = {System.Text.Json.JsonSerializer.Serialize(args.Item)}");
	}

	void SelectedItemsChanged(HashSet<SaleReservationBillModel> items)
	{
		_events.Insert(0, $"Event = SelectedItemsChanged, Data = {System.Text.Json.JsonSerializer.Serialize(items)}");
	}
}